/*操作指令
删除字符串中*号，0表示不改变，1表示执行删除
xyz分别表示对头部Head、中间Mid、尾部Tail执行的操作
_______________________________
二进制	十进制	操作说明
000		0		不删除任何*
001     1		删除尾部*
010		2		删除中间*
011     3       删除中间、尾部*
100		4		删除头部*
101     5       删除头部、尾部*
110     6       删除头部、中间*
111     7       删除所有*
*/

/*
Project:	StarDel
Author:		Boohey
V1.0	增加了模式101，删除头部、尾部*
V1.2	增加了调试模式，直接输出0~7对应结果
V1.2.1  Debug模式下更改均基于原始字符串
*/


#include <stdio.h>

void NONO();
void StarDelT(char *a);   //001
void StarDelM(char *a);   //010
void StarDelMT(char *a);  //011
void StarDelH(char *a);   //100
void StarDelHT(char *a);  //101
void StarDelHM(char *a);  //110
void StarDelHMT(char *a); //111

void main()
{
	char  s[50] = ("***Boohey***likes***Gakki***");
	char  s0[50] = ("***Boohey***likes***Gakki***");
	char  s1[50] = ("***Boohey***likes***Gakki***");
	char  s2[50] = ("***Boohey***likes***Gakki***");
	char  s3[50] = ("***Boohey***likes***Gakki***");
	char  s4[50] = ("***Boohey***likes***Gakki***");
	char  s5[50] = ("***Boohey***likes***Gakki***");
	char  s6[50] = ("***Boohey***likes***Gakki***");
	char  s7[50] = ("***Boohey***likes***Gakki***");
	//char *s0 = s, *s1 = s, *s2 = s, *s3 = s, *s4 = s, *s5 = s, *s6 = s, *s7 = s;
	int DebugMode = 1;//Debug Mode Enable
	int ModeCode, DebugCode;

	printf("The original string:\n%s\n", s);

	if (!DebugMode)
	{
		printf("Enter a string:\n");
		gets(s);
	}

	printf("The string after deleted:\n");
	if (DebugMode)
	{
		for (DebugCode = 0; DebugCode < 8; DebugCode++)
		{
			switch (DebugCode)
			{
			case 0: printf("Mode 000:\n");		            puts(s0); break;
			case 1:	printf("Mode 001:\n");	StarDelT(s1);	puts(s1); break;
			case 2:	printf("To be debugged.Mode 010:\n");	StarDelM(s2);	puts(s2); break;
			case 3:	printf("Mode 011:\n");	StarDelMT(s3);	puts(s3); break;
			case 4:	printf("Mode 100:\n");	StarDelH(s4);	puts(s4); break;
			case 5:	printf("Mode 101:\n");	StarDelHT(s5);	puts(s5); break;
			case 6:	printf("To be debugged.Mode 110:\n");	StarDelHM(s6);	puts(s6); break;
			case 7:	printf("To be debugged.Mode 111:\n");	StarDelHMT(s7);	puts(s7); break;
			}
		}
	}
	else
	{
		scanf("%d", &ModeCode);

		switch (ModeCode)
		{
		case 0:                 break;
		case 1: StarDelT(s);	break;
		case 2: StarDelM(s);	break;
		case 3: StarDelMT(s);	break;
		case 4: StarDelH(s);	break;
		case 5: StarDelHT(s);   break;
		case 6: StarDelHM(s);   break;
		case 7: StarDelHMT(s);  break;
		default: printf("Wrong StarDelete ModeCode!\n");
		}
		printf("The string after deleted:\n");
		puts(s);
	}
	//NONO();
}
void NONO()
{/* 本函数用于打开文件，输入数据，调用函数，输出数据，关闭文件。 */
	FILE *in, *out;
	int i; char s[81];
	in = fopen("in.dat", "r");
	out = fopen("out.dat", "w");
	for (i = 0; i < 10; i++) {
		fscanf(in, "%s", s);
		//StarDelHT(s) ;
		fprintf(out, "%s\n", s);
	}
	fclose(in);
	fclose(out);
}

/*
二进制	十进制	操作说明
001     1		删除尾部 *
*/
void StarDelT(char *a)   //001
{
		/*遍历，指针a指向\0也即*/
	while (*a != '\0')
		a++;
	/*指针a指向最后一个字母*/
	a--;
	/*指针a指向为*时指针a--，
	直至遇到字母也即非*为止*/
	while (*a == '*')
		a--;
	/*字符串后移一位，加上结束标志符*/
	*(a + 1) = '\0';
}
/*
二进制	十进制	操作说明
010		2		删除中间 *
*/
void StarDelM(char *a)   //010
{
}
/*
二进制	十进制	操作说明
011     3       删除中间、尾部 *
*/
void StarDelMT(char *a)  //011
{
	int i = 0;
	/*定义临时指针P,初始指向原串首地址*/
	char *p = a;
	/*利用循环语句把字符串中字母前的*copy到原串*/
	while (*p && (*p == '*'))
	{
		a[i] = *p;
		i++;
		p++;
	}
	/*继续移动指针
	把串中和串尾的非*号宇符拷贝到原串*/
	while (*p)
	{
		if (*p != '*')
		{
			a[i] = *p;
			i++;
		}
		p++;
	}
	/*修改后的宇符串赋结束宇符_\0_*/
	a[i] = '\0';
}
/*
二进制	十进制	操作说明
100		4		删除头部 *
*/
void StarDelH(char *a)
{
	int i = 0;
	/*定义临时指针P,初始指向原串首地址*/
	char *p = a;
	/*遍历，直至找到第一个字母*/
	while (*p && (*p == '*'))
		p++;

	/*继续移动指针，字符拷贝到原串
	直至遇到结束字符\0*/
	while (*p)
	{
		if (*p != '\0')
		{
			a[i] = *p;
			i++;
		}
		p++;
	}
}
/*
二进制	十进制	操作说明
101     5       删除头部、尾部 *
*/
void StarDelHT(char *a)
{
	char *t = a;
	/*遍历，指针a指向\0也即*/
	while (*t != '\0')//while(*t)
		t++;
	/*指针a指向最后一个字母*/
	t--;
	/*指针a指向为*时指针a--，
	直至遇到字母也即非*为止.
	指针t指向字符串中最后字符*/
	while (*t == '*')
		t--;
	/*字符串后移一位，加上结束标志符*/
	*(t + 1) = '\0';

	int i = 0;
	/*定义临时指针P,初始指向原串首地址*/
	char *p = a;
	/*遍历，直至找到第一个字母.
	指针f指向字符串中第一个字符*/
	while (*p == '*')
		p++;
	/*继续移动指针，字符拷贝到原串
	直至遇到结束字符\0*/
	while (*p)
	{
		if (*p != '\0')
		{
			a[i] = *p;
			i++;
		}
		p++;
	}
}
/*
二进制	十进制	操作说明
110     6       删除头部、中间 *
*/
void StarDelHM(char *a)
{
}
/*
二进制	十进制	操作说明
111     7       删除所有*
*/
void StarDelHMT(char *a) //111
{

}



